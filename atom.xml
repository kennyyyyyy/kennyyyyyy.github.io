<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Imperio</title>
  
  <subtitle>Boy♂ Next♂ Door~</subtitle>
  <link href="http://kennyyyyyy.github.io/atom.xml" rel="self"/>
  
  <link href="http://kennyyyyyy.github.io/"/>
  <updated>2021-04-19T15:34:02.017Z</updated>
  <id>http://kennyyyyyy.github.io/</id>
  
  <author>
    <name>kennyyy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数电</title>
    <link href="http://kennyyyyyy.github.io/2021/04/19/%E6%95%B0%E7%94%B5/"/>
    <id>http://kennyyyyyy.github.io/2021/04/19/%E6%95%B0%E7%94%B5/</id>
    <published>2021-04-19T13:05:33.000Z</published>
    <updated>2021-04-19T15:34:02.017Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="第四章：组合逻辑电路"><a href="#第四章：组合逻辑电路" class="headerlink" title="第四章：组合逻辑电路"></a>第四章：组合逻辑电路</h1><h2 id="编码器"><a href="#编码器" class="headerlink" title="编码器"></a>编码器</h2><p><img src="/images/数电/1.二进制编码器.png" alt="二进制编码器"></p><p><img src="/images/数电/1.2-10进制编码器.png" alt="2-10进制编码器"></p><p><img src="/images/数电/1.优先编码器.png" alt="优先编码器"></p><p><img src="/images/数电/1.2-10进制优先编码器.png" alt="2-10进制优先编码器"></p><h2 id="译码器"><a href="#译码器" class="headerlink" title="译码器"></a>译码器</h2><p><img src="/images/数电/2.二进制译码器-低电平有效.png" alt="二进制译码器-低电平有效"> <img src="/images/数电/2.二进制译码器-高电平有效.png" alt="二进制译码器-高电平有效"> </p><p><img src="/images/数电/2.3线-8线译码器.png" alt="3线-8线译码器"></p><p><img src="/images/数电/2.2-10进制译码器.png" alt="2-10进制译码器"></p><p><img src="/images/数电/2.数码显示译码器.png" alt="数码显示译码器"></p><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><p><img src="/images/数电/3.数据选择器.png" alt="数据选择器"></p><script type="math/tex; mode=display">\mid \mathrm{Y}_{1}=\left[\mathrm{D}_{10}\left(\mathrm{~A}_{1} \mathrm{~A}_{0}^{\prime}\right)+\mathrm{D}_{11}\left(\mathrm{~A}_{1}^{\prime} \mathrm{A}_{0}\right)+\mathrm{D}_{12}\left(\mathrm{~A}_{1} \mathrm{~A}_{0}^{\prime}\right)+\mathrm{D}_{13}\left(\mathrm{~A}_{1} \mathrm{~A}_{0}\right)\right]^{*} \mathrm{~S}_{1}</script><h2 id="加法器"><a href="#加法器" class="headerlink" title="加法器"></a>加法器</h2><h3 id="一位加法器"><a href="#一位加法器" class="headerlink" title="一位加法器"></a>一位加法器</h3><p><img src="/images/数电/4.1位加法器-半加器.png" alt="半加器"></p><p><img src="/images/数电/4.1位加法器-全加器.png" alt="全加器"></p><h3 id="多位加法器"><a href="#多位加法器" class="headerlink" title="多位加法器"></a>多位加法器</h3><p><img src="/images/数电/4.多为加法器-超前进位加法器.png" alt="超前进位加法器"></p><p><img src="/images/数电/4.多为加法器-串行进位加法器.png" alt="串行进位加法器"> </p><script type="math/tex; mode=display">\begin{array}{l}(\boldsymbol{C I})_{i}=(\boldsymbol{C O})_{i-1} \\\boldsymbol{S}_{i}=\boldsymbol{A}_{i} \oplus \boldsymbol{B}_{i} \oplus(\boldsymbol{C I})_{i} \\(\boldsymbol{C O})_{i}=A_{i} \boldsymbol{B}_{i}+\left(\boldsymbol{A}_{i}+\boldsymbol{B}_{i}\right)(\boldsymbol{C I})_{i}\end{array}</script>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;h1 id=&quot;第四章：组合逻辑电路&quot;&gt;&lt;a href=&quot;#第四章：组合逻辑电路&quot; class=&quot;headerlink&quot; title=&quot;第四章：组合逻辑电路&quot;&gt;&lt;/a&gt;第四章：组合逻辑电路&lt;/h1&gt;&lt;h2 id=&quot;编码器&quot;&gt;&lt;a h</summary>
      
    
    
    
    <category term="数电" scheme="http://kennyyyyyy.github.io/categories/%E6%95%B0%E7%94%B5/"/>
    
    
    <category term="学习" scheme="http://kennyyyyyy.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>TANKS! Unity Tutorial 项目学习记录</title>
    <link href="http://kennyyyyyy.github.io/2021/04/13/Tanks%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://kennyyyyyy.github.io/2021/04/13/Tanks%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2021-04-13T15:25:35.000Z</published>
    <updated>2021-04-17T09:20:35.315Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><h3 id="SmoothDamp"><a href="#SmoothDamp" class="headerlink" title="SmoothDamp"></a>SmoothDamp</h3><p>平滑的改变当前值至另一个值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Mathf.SmoothDamp(<span class="built_in">float</span> current, <span class="built_in">float</span> target, ref <span class="built_in">float</span> currentVelocity, <span class="built_in">float</span> smoothTime, <span class="built_in">float</span> maxSpeed = Mathf.Infinity, <span class="built_in">float</span> deltaTime = Time.deltaTime);</span><br><span class="line"></span><br><span class="line">Vector3 SmoothDamp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, <span class="built_in">float</span> smoothTime, <span class="built_in">float</span> maxSpeed = Mathf.Infinity, <span class="built_in">float</span> deltaTime = Time.deltaTime);</span><br></pre></td></tr></table></figure><p><font color="#c77eb5" size="2"> <em>current</em>：当前位置 </font><br><font color="#c77eb5" size="2"> <em>target</em>：尝试达到的目标值 </font><br><font color="#c77eb5" size="2"> <em>currentVelocity</em>：当前速度，该值在每次调用时都会由函数修改。</font><br><font color="#c77eb5" size="2"> <em>smoothTime</em>：达到目标值的时间 </font><br><font color="#c77eb5" size="2"> <em>maxSpeed</em>：最大速度 </font><br><font color="#c77eb5" size="2"> <em>deltaTime</em>：默认为Time.deltatime </font><br><font color="#c77eb5" size="2"> <em>ref关键字</em>：相当于c的指针传参，及引用传参。 </font></p><h3 id="InverseTransformPoint"><a href="#InverseTransformPoint" class="headerlink" title="InverseTransformPoint"></a>InverseTransformPoint</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public Vector3 InverseTransformPoint(Vector3 position);</span><br></pre></td></tr></table></figure><p>将position这个Vector3类型变量转化为 以V3的世界坐标为零点基准的情况下 position相对于V3的坐标值。</p><h3 id="Physics"><a href="#Physics" class="headerlink" title="Physics"></a>Physics</h3><h4 id="Physics-OverlapSphere"><a href="#Physics-OverlapSphere" class="headerlink" title="Physics.OverlapSphere"></a>Physics.OverlapSphere</h4><p>检测范围内的Collider<br><code> public static Collider[] OverlapSphere(Vector3 position, float radius, int layerMask = AllLayers, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal);</code></p><p><font color="#c77eb5" size="2"> <em>position</em>：圆心 </font><br><font color="#c77eb5" size="2"> <em>radius</em>：检测半径 </font><br><font color="#c77eb5" size="2"> <em>layerMask</em>：检测层级 </font><br><font color="#c77eb5" size="2"> <em>queryTriggerInteraction</em>：判断是否应该检测Trigger </font></p><h3 id="Rigidbody"><a href="#Rigidbody" class="headerlink" title="Rigidbody"></a>Rigidbody</h3><h4 id="targetRigidbody-AddExplosionForce"><a href="#targetRigidbody-AddExplosionForce" class="headerlink" title="targetRigidbody.AddExplosionForce"></a>targetRigidbody.AddExplosionForce</h4><p>爆炸力将随着到物体的距离变小。<br><code> public void AddExplosionForce(float explosionForce, Vector3 explosionPosition, float explosionRadius, float upwardsModifier = 0.0f, ForceMode mode = ForceMode.Force)); </code></p><p><font color="#c77eb5" size="2"> <em>explosionForce</em>：爆炸的力量（会根据距离变化）</font><br><font color="#c77eb5" size="2"> <em>explosionPosition</em>：爆炸中心 </font><br><font color="#c77eb5" size="2"> <em>explosionRadius</em>：爆炸半径 </font><br><font color="#c77eb5" size="2"> <em>upwardsModifier</em>：可以调整爆炸的位置，让物体有被炸起来向上的效果，但爆炸本身的位置不变 </font><br><font color="#c77eb5" size="2"> <em>ForceMode</em>：对物体施加力的方法 </font></p><h2 id="Manual"><a href="#Manual" class="headerlink" title="Manual"></a>Manual</h2><h3 id="相机的两种投影方式"><a href="#相机的两种投影方式" class="headerlink" title="相机的两种投影方式"></a>相机的两种投影方式</h3><p><img src="/images/Tanks%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/00.jpg" alt="相机的两种投影方式(prejection)"></p><p>透视投影(Perspective)(左): 正交投影的观察体是长方体，它使用一组平行投影将三维对象投影到投影平面上去，即场景中的物体没有近大远小的效果。</p><p>正交投影(Orthographic)(右): 透视投影的观察体是视锥体，它使用一组由投影中心产生的放射投影线，将三维对象投影到投影平面上去，即屏幕中的物体存在透视效果</p><h3 id="Aodio-Mixer"><a href="#Aodio-Mixer" class="headerlink" title="Aodio Mixer"></a>Aodio Mixer</h3><p>类似于Windows的音量合成器，但更为复杂<br>可以用来进行多种音效的混合表现<br>要用可百度学习</p><h2 id="问题与解决"><a href="#问题与解决" class="headerlink" title="问题与解决"></a>问题与解决</h2><h3 id="移动和旋转问题"><a href="#移动和旋转问题" class="headerlink" title="移动和旋转问题"></a>移动和旋转问题</h3><p>有问题的代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Vector3 move = Vector3.forward * m_MovementInputValue * Time.deltaTime * m_Speed;</span><br><span class="line">m_Rigidbody.MovePosition(m_Rigidbody.position + move);</span><br></pre></td></tr></table></figure><p>此代码会导致物体旋转后会继续以世界坐标的z轴为前后方向，而导致旋转看起来不起作用，像坐标轴没有跟着旋转一样</p><hr><p>正确的代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Vector3 move = transform.forward * m_MovementInputValue * Time.deltaTime * m_Speed;</span><br><span class="line">m_Rigidbody.MovePosition(m_Rigidbody.position + move);</span><br></pre></td></tr></table></figure><p>修改后一切正常</p><hr><div class="panel panel-warning">    <div class="panel-title">Vector3.forward和transform.forward的区别</div>    <div class="panel-body">        <p>Vector3.forward的值永远是世界坐标（0,0,1），<br>而transform.forward是世界坐标对应的物体坐标的轴的向量</p>    </div>    </div><h2 id="代码记录"><a href="#代码记录" class="headerlink" title="代码记录"></a>代码记录</h2><h3 id="相机的平滑运动"><a href="#相机的平滑运动" class="headerlink" title="相机的平滑运动"></a>相机的平滑运动</h3><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>移动相关</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">private void Move()</span><br><span class="line">&#123;</span><br><span class="line">    FindAveragePosition();</span><br><span class="line"></span><br><span class="line">    transform.position = Vector3.SmoothDamp(transform.position, m_DesiredPosition, ref m_MoveVelocity, m_DampTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 找到多个Player的中间位置</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">private void FindAveragePosition()                      </span><br><span class="line">&#123;</span><br><span class="line">    Vector3 averagePos = new Vector3();</span><br><span class="line"></span><br><span class="line">    //记录还存在的Player的数量</span><br><span class="line">    int numTargets = 0;                                 </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (int i = 0; i &lt; m_Targets.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!m_Targets[i].gameObject.activeSelf)</span><br><span class="line">            <span class="built_in">continue</span>;</span><br><span class="line"></span><br><span class="line">        // 记录Player的位置和</span><br><span class="line">        averagePos += m_Targets[i].position;            </span><br><span class="line">        numTargets++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //得到中间位置</span><br><span class="line">    <span class="keyword">if</span> (numTargets &gt; 0)                              </span><br><span class="line">        averagePos /= numTargets;</span><br><span class="line"></span><br><span class="line">    //保证相机的y轴不移动</span><br><span class="line">    averagePos.y = transform.position.y;               </span><br><span class="line"></span><br><span class="line">    m_DesiredPosition = averagePos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>缩放相关</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">private void Zoom()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">float</span> requiredSize = FindRequiredSize();</span><br><span class="line">    m_Camera.orthographicSize = Mathf.SmoothDamp(m_Camera.orthographicSize, requiredSize, ref m_ZoomSpeed, m_DampTime);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 找到需要的相机的最大大小</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;returns&gt;返回相机的合适大小&lt;/returns&gt;</span><br><span class="line">private <span class="built_in">float</span> FindRequiredSize()                    </span><br><span class="line">&#123;</span><br><span class="line">    //获得相机将要到达的位置的相对坐标</span><br><span class="line">    Vector3 desiredLocalPos = transform.InverseTransformPoint(m_DesiredPosition);   </span><br><span class="line"></span><br><span class="line">    <span class="built_in">float</span> size = 0f;</span><br><span class="line"></span><br><span class="line">    //获得还存活的Player的所需要的屏幕最大值</span><br><span class="line">    <span class="keyword">for</span> (int i = 0; i &lt; m_Targets.Length; i++)                                      </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!m_Targets[i].gameObject.activeSelf)</span><br><span class="line">            <span class="built_in">continue</span>;</span><br><span class="line"></span><br><span class="line">        //转化Player的坐标为相对值</span><br><span class="line">        Vector3 targetLocalPos = transform.InverseTransformPoint(m_Targets[i].position);</span><br><span class="line"></span><br><span class="line">        //获得Player中心位置与Player位置的差值</span><br><span class="line">        Vector3 desiredPosToTarget = targetLocalPos - desiredLocalPos;</span><br><span class="line"></span><br><span class="line">        //计算x/y轴的相对大小，并取最大值</span><br><span class="line">        size = Mathf.Max (size, Mathf.Abs (desiredPosToTarget.y));                  </span><br><span class="line"></span><br><span class="line">        size = Mathf.Max (size, Mathf.Abs (desiredPosToTarget.x) / m_Camera.aspect);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //添加缓冲区</span><br><span class="line">    size += m_ScreenEdgeBuffer;</span><br><span class="line"></span><br><span class="line">    //防止屏幕缩小</span><br><span class="line">    size = Mathf.Max(size, m_MinSize);                                              </span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>     </div></div>    </div><h3 id="炮弹的爆炸和伤害判定"><a href="#炮弹的爆炸和伤害判定" class="headerlink" title="炮弹的爆炸和伤害判定"></a>炮弹的爆炸和伤害判定</h3><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>爆炸相关</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">private void OnTriggerEnter(Collider other)</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    //获得爆炸范围内的坦克collider</span><br><span class="line">    Collider[] colliders = Physics.OverlapSphere(transform.position, m_ExplosionRadius, m_TankMask);//获得爆炸范围内的坦克collider</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (int i = 0; i &lt; colliders.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        Rigidbody targetRigidbody = colliders[i].GetComponent&lt;Rigidbody&gt;();</span><br><span class="line">        <span class="keyword">if</span> (!targetRigidbody)</span><br><span class="line">            <span class="built_in">continue</span>;</span><br><span class="line"></span><br><span class="line">        //对范围内的tank的刚体施加一个力</span><br><span class="line">        targetRigidbody.AddExplosionForce(m_ExplosionForce, transform.position, m_ExplosionRadius);//将</span><br><span class="line"></span><br><span class="line">        //获得Tank的血量属性</span><br><span class="line">        TankHealth tankHealth = targetRigidbody.GetComponent&lt;TankHealth&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!tankHealth)</span><br><span class="line">            <span class="built_in">continue</span>;</span><br><span class="line"></span><br><span class="line">        //计算伤害</span><br><span class="line">        <span class="built_in">float</span> damage = CalculateDamage(targetRigidbody.position);</span><br><span class="line"></span><br><span class="line">        //造成伤害</span><br><span class="line">        tankHealth.TakeDamage(damage);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">//粒子效果和声音的播放</span><br><span class="line">    m_ExplosionParticles.transform.parent = null;</span><br><span class="line">    m_ExplosionParticles.Play();</span><br><span class="line">    m_ExplosionAudio.Play();</span><br><span class="line"></span><br><span class="line">//销毁</span><br><span class="line">    Destroy(m_ExplosionParticles.gameObject, m_ExplosionParticles.main.duration);</span><br><span class="line">    Destroy(gameObject);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>     </div></div>    </div><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>计算伤害</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">private <span class="built_in">float</span> CalculateDamage(Vector3 targetPosition)</span><br><span class="line">&#123;</span><br><span class="line">    //计算Tank和炸弹的向量</span><br><span class="line">    Vector3 explosionToTarget = targetPosition - transform.position;</span><br><span class="line">    </span><br><span class="line">    //获得距离</span><br><span class="line">    <span class="built_in">float</span> explosionDistance = explosionToTarget.magnitude;</span><br><span class="line"></span><br><span class="line">    //计算相对距离比例</span><br><span class="line">    <span class="built_in">float</span> relativeDistance = (m_ExplosionRadius - explosionDistance) / m_ExplosionRadius;</span><br><span class="line"></span><br><span class="line">    //计算伤害</span><br><span class="line">    <span class="built_in">float</span> damage = relativeDistance * m_MaxDamage;</span><br><span class="line"></span><br><span class="line">    //排除Tank在边缘时 相对比例 为负数的情况</span><br><span class="line">    damage = Mathf.Max(0, damage);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> damage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>     </div></div>    </div><h2 id="学习总结"><a href="#学习总结" class="headerlink" title="学习总结"></a>学习总结</h2><h3 id="游戏循环模式-协程完成"><a href="#游戏循环模式-协程完成" class="headerlink" title="游戏循环模式(协程完成)"></a>游戏循环模式(协程完成)</h3><p><img src="/images/Tanks%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/%E6%B8%B8%E6%88%8F%E5%BE%AA%E7%8E%AF.jpg" alt="循环模式"><br><img src="/images/Tanks%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6.jpg" alt="Tanks的流程控制"></p><h3 id="游戏管理模式"><a href="#游戏管理模式" class="headerlink" title="游戏管理模式"></a>游戏管理模式</h3><p>一些游戏物体的代码不需要继承MonoBehaviour（无需挂载），只当实例化后赋予其GameObject或直接更具里面的信息实例化一个物体。例如此例中的Tank 或者 一些随机地图的部分地图信息</p><h3 id="可能的心得-……"><a href="#可能的心得-……" class="headerlink" title="可能的心得(……..)"></a>可能的心得(……..)</h3><ul><li>协程内调用多个协程，只会在上一个协程调用完成后，下一个协程才会开始</li><li>回合制的游戏可以使用协程控制游戏流程，开始、游玩、结束，都很清晰明了</li><li>写代码时因该将所有功能块写成函数，可以让代码结构更清晰</li><li>尽量将可能的变量全定义在类的开头，理由同上</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;



&lt;h2 id=&quot;API&quot;&gt;&lt;a href=&quot;#API&quot; class=&quot;headerlink&quot; title=&quot;API&quot;&gt;&lt;/a&gt;API&lt;/h2&gt;&lt;h3 id=&quot;SmoothDamp&quot;&gt;&lt;a href=&quot;#SmoothDamp&quot; </summary>
      
    
    
    
    <category term="Unity" scheme="http://kennyyyyyy.github.io/categories/Unity/"/>
    
    
    <category term="Unity" scheme="http://kennyyyyyy.github.io/tags/Unity/"/>
    
    <category term="学习" scheme="http://kennyyyyyy.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>部署网站的记录</title>
    <link href="http://kennyyyyyy.github.io/2021/04/13/Demo/"/>
    <id>http://kennyyyyyy.github.io/2021/04/13/Demo/</id>
    <published>2021-04-13T08:56:13.000Z</published>
    <updated>2021-04-17T04:20:40.746Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="网页属性"><a href="#网页属性" class="headerlink" title="网页属性"></a>网页属性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">title: 文章标题</span><br><span class="line">date: 创建时间</span><br><span class="line">categories: 分类</span><br><span class="line">tags:标签</span><br><span class="line">- Tag0</span><br><span class="line">- Tag1</span><br><span class="line">- Tag2</span><br><span class="line">sticky: 100数字越大优先级越高</span><br><span class="line">pic:指定预览图片，图片位置为同级目录下的同名文件夹</span><br><span class="line">comments: <span class="literal">true</span>是否开放评论</span><br><span class="line">toc: <span class="literal">true</span>是否生成目录</span><br><span class="line">only:在什么位置显示，如果没有就全部显示</span><br><span class="line">- home</span><br><span class="line">- category</span><br><span class="line">- tag</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>提示信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;% alertbox success <span class="string">&quot;成功&quot;</span> %&#125;</span><br><span class="line">&#123;% alertbox danger <span class="string">&quot;危险&quot;</span> %&#125;</span><br><span class="line">&#123;% alertbox info <span class="string">&quot;消息&quot;</span> %&#125;</span><br><span class="line">&#123;% alertbox warning <span class="string">&quot;警告&quot;</span> %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="折叠相关"><a href="#折叠相关" class="headerlink" title="折叠相关"></a>折叠相关</h3><div class="xControl">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>折叠的折叠框</span></div>    <div class="xContent"><div class="inner">        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;% collapse 折叠框的标题 %&#125;</span><br><span class="line"></span><br><span class="line">被折叠的内容 1</span><br><span class="line">被折叠的内容 2</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&#123;% endcollapse %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>     </div></div>    </div><div class="xControl active">    <div class="xHeading"><div class="xIcon"><i class="fa fa-plus"></i></div><span>预先打开的折叠框</span></div>    <div class="xContent pre-open"><div class="inner">        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;% collapse 折叠框的标题 open %&#125;</span><br><span class="line"></span><br><span class="line">被折叠的内容 1</span><br><span class="line">被折叠的内容 2</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&#123;% endcollapse %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>     </div></div>    </div><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><div class="panel panel-info">    <div class="panel-title">提示框</div>    <div class="panel-body">        <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;% colorpanel TYPE 面板框的标题 %&#125;</span><br><span class="line"></span><br><span class="line">面板里的内容 1</span><br><span class="line">面板里的内容 2</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">&#123;% endcolorpanel %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>type是框的类型<br>·successs<br>·danger<br>·info<br>·warning</p>    </div>    </div><h3 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h3><p>图片需要放在source文件夹下的images下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![图片描述](/images/图片名称.jpg)  </span><br><span class="line"></span><br><span class="line">![图片描述](/images/文件夹/图片名称.jpg) </span><br></pre></td></tr></table></figure><p><img src="/images/Demo/00.jpg" alt="图片插入"> </p><h3 id="字体颜色"><a href="#字体颜色" class="headerlink" title="字体颜色"></a>字体颜色</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;font color=<span class="comment">#00ffff&gt;color=#00ffff&lt;/font&gt;</span></span><br></pre></td></tr></table></figure><p><font color="#00ffff">color=#00ffff</font></p><p><a href="https://www.5tu.cn/colors/yansebiao.html">颜色表参考</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://candinya.com/posts/Kratos-Rebirth-Manual/#%E5%AE%89%E8%A3%85%E6%8F%90%E7%A4%BA">部分参考来源</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;


&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;h3 id=&quot;网页属性&quot;&gt;&lt;a href=&quot;#网页属性&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="学习" scheme="http://kennyyyyyy.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="错误总结" scheme="http://kennyyyyyy.github.io/tags/%E9%94%99%E8%AF%AF%E6%80%BB%E7%BB%93/"/>
    
    <category term="经验" scheme="http://kennyyyyyy.github.io/tags/%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
</feed>
